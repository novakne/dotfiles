#!/usr/bin/env bash
#
# Submits a paste to paste.sr.ht
# SOURCE: <https://git.sr.ht/~yerinalexey/dotfiles/tree/master/item/scripts/submit-paste>
#
# USAGE: paste-srht [option] <file>
#
# REQUIREMENTS: curl - jq - pass

PASTE_BASE="${PASTE_BASE:-https://paste.sr.ht}"
SRHT_TOKEN="${SRHT_TOKEN:-$(pass show srht/token/paste)}"

_usage()
{
	cat >&2 <<-END
		Usage: paste-srht [-n name | -N] [-v public|unlisted|private] [-d] <file>

		Options:
		  -n name       - set filename for the paste
		  -N            - create unnamed paste
		  -v visibility - set paste visibility: public, unlisted or private (default: unlisted)

		Examples:
		  Submit from a file:
		  $ submit-paste main.rs

		  Set another filename instead of auto-detecting:
		  $ submit-paste -n "anotherfile.rs" file.rs

		  Submit without a filename:
		  $ submit-paste -N /tmp/log
	END
	exit 1
}

# Options
visibility=unlisted
filename=""
unnamed=0

while getopts "n:Nv:dc" opt; do
	case "$opt" in
		n) filename="$OPTARG" ;;
		N) filename="" unnamed=1 ;;
		v) visibility="$OPTARG" ;;
		*) _usage ;;
	esac
done
shift $((OPTIND - 1))

[[ $# -lt 1 ]] && _usage
file="$1"

[[ -z "$filename" ]] && [[ $unnamed -eq 0 ]] && filename="$(basename "$file")"

jq -sR \
	--arg visibility "$visibility" \
	--arg filename "$filename" '{
  "visibility": $visibility,
  "files": [
    {
      "filename": (if ($filename | length) > 0 then $filename else null end),
      "contents": .,
    }
  ]
}' <"$file" |
	curl -sS \
		-X POST \
		--oauth2-bearer "$SRHT_TOKEN" \
		-H Content-Type:application/json \
		-d @- \
		"$PASTE_BASE"/api/pastes |
	jq -r \
		--arg base "$PASTE_BASE" \
		'$base + "/" + .user.canonical_name + "/" + .sha'
