#!/usr/bin/env bash


# [ Aliases ]
[[ -r "${_shell_plugins_dir}"/aliases ]] && . "${_shell_plugins_dir}"/aliases

# [ Dircolors ]
[[ -r "${_shell_plugins_dir}"/dircolors ]] &&
  eval "$(dircolors -b "${_shell_plugins_dir}"/dircolors)"

# [ Starship ]
[[ -r "${_shell_plugins_dir}"/starship.toml ]] &&
  export STARSHIP_CONFIG="${_shell_plugins_dir}"/starship.toml

# [ Zoxide ]
_is_command zoxide && { export _ZO_ECHO=1; export _ZO_RESOLVE_SYMLINKS=1; }


# [ Personnal custom ]
# [ Theme ]
[[ ! -d "${_shell_plugins_dir}"/colors ]] && echo "No themes folder found"
export USER_THEME=argi

if [[ "$USER_THEME" = argi ]]; then
  source "${_shell_plugins_dir}"/colors/argi

  # Fzf
  _gen_fzf_default_opts() {
    export FZF_DEFAULT_OPTS="
    --color=bg+:${base00},bg:${base00},spinner:${blue},hl:${blue}
    --color=fg:${base07},header:${blue},info:${blue},pointer:${red}
    --color=marker:${red},fg+:${base07},prompt:${blue},hl+:${red}
    --height 50% --reverse --margin 2% --cycle --multi --ansi
    "
  }

elif [[ "$USER_THEME" == kosmikoa ]]; then
  source "${_shell_plugins_dir}"/colors/kosmikoa

  # Fzf
  _gen_fzf_default_opts() {
      export FZF_DEFAULT_OPTS="
    --color=bg+:${base00},bg:${base00},spinner:${pink},hl:${green}
    --color=fg:${base05},header:${pink},info:${pink},pointer:${yellow}
    --color=marker:${blue},fg+:${base07},prompt:${pink},hl+:${yellow}
    "
  }

fi

# Configure shell to emit the OSC 7 escape sequence
[[ -r "${_shell_plugins_dir}"/osc7 ]] && . "${_shell_plugins_dir}"/osc7

# [ Fzf ]
if [[ -d "${_fzf_dir}" ]]; then
  _append_path "${_fzf_dir}"/bin
  _gen_fzf_default_opts

  export FZF_DEFAULT_COMMAND='fd --type file --follow --hidden -E .git --color=always'

  # Uses tree command to show the entries of the directory
  export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -200'"

  # Use fd instead of the default find
  _fzf_compgen_path() { fd --hidden --follow --exclude ".git" . "$1"; }

  # Use fd to generate the list for directory completion
  _fzf_compgen_dir() { fd --type d --hidden --follow --exclude ".git" . "$1"; }

fi

# [ Nnn ]
if _is_command nnn; then
    export NNN_OPTS='eEHr'
    export NNN_COLORS='3415'
    export NNN_FCOLORS='070704030f05060808010301'
    export NNN_TRASH=1
    export NNN_ARCHIVE="\\.(7z|a|ace|alz|arc|arj|bz|bz2|cab|cpio|deb|gz|jar|lha|lz|lzh|lzma|lzo|rar|rpm|rz|t7z|tar|tbz|tbz2|tgz|tlz|txz|tZ|tzo|war|xpi|xz|Z|zip)$"
    export NNN_SEL='/tmp/.sel'
    export NNN_FIFO='/tmp/nnn.fifo'

    NNN_BMS_CONFIG='c:~/.config;n:~/.config/nvim;z:~/.config/zsh;s:~/.config/shell;r:~/.config/river'
    NNN_BMS_LOCAL='b:~/.local/share/bld;l:~/.local;d:~/.local/share/dotfiles'
    NNN_BMS_DEV='g:~/dev;t:/tmp'
    NNN_BMS_MEDIA='m:~/media;i:~/media/img;e:~/media/notes'
    NNN_BMS="$NNN_BMS_CONFIG;$NNN_BMS_LOCAL;$NNN_BMS_DEV;$NNN_BMS_MEDIA"
    export NNN_BMS

    NNN_PLUG_EDIT='b:cleanfilename;c:cmx;e:exec'
    NNN_PLUG_FUZZY='f:fuzzy;a:autojump;g:rg;s:fd'
    NNN_PLUG_OPEN='n:nvr;u:suedit'
    NNN_PLUG_GIT='l:_git log;t:_git status'
    NNN_PLUG="$NNN_PLUG_EDIT;$NNN_PLUG_FUZZY;$NNN_PLUG_OPEN;$NNN_PLUG_GIT"
    export NNN_PLUG
fi

