# ------------------------------------------------
# [ LOGIN ]
# ------------------------------------------------

# ------------------------------------------------
# [ SYSTEM ]
# ------------------------------------------------
# [ Language ]
export LANG=fr_FR.UTF-8
export LANGUAGE=fr_FR.UTF-8
export LC_COLLATE=C

# [ Keyboard ]
export XKB_DEFAULT_MODEL=pc105
export XKB_DEFAULT_LAYOUT=fr
export XKB_DEFAULT_OPTIONS=caps:escape_shifted_capslock

# [ Xdg ]
export XDG_CACHE_HOME="$HOME"/.cache
export XDG_CONFIG_HOME="$HOME"/.config
export XDG_DATA_HOME="$HOME"/.local/share

# [ Defaults Apps ]
export BROWSER=firefox
export EDITOR=nvim
export VISUAL=nvim
export PAGER=less

# [ Man pages ]
export MANPATH="${MANPATH:+${MANPATH}:}/usr/local/share/man:/usr/share/man:$XDG_DATA_HOME/man"

# [ Runit ]
export SVDIR="$XDG_CONFIG_HOME"/service

# [ Dotfiles ]
export DOTFILES_DIR="$XDG_DATA_HOME"/dotfiles

# [ Sources ]
export SOURCES_DIR="$XDG_DATA_HOME"/src

# [ Gpg ]
export GNUPGHOME="$XDG_DATA_HOME"/gnupg
GPG_TTY=$(tty)
export GPG_TTY

unset SSH_AGENT_PID
if [[ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]]
then
	SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
	export SSH_AUTH_SOCK
fi

[[ -n "$SSH_CONNECTION" ]] && export PINENTRY_USER_DATA="USE_CURSES=1"

# Ssh-agent
export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR"/ssh-agent.socket

# [ System bin ]
PATH="/usr/local/bin${PATH:+:${PATH}}"
PATH="/usr/local/sbin${PATH:+:${PATH}}"

# ------------------------------------------------
# [ USER ]
# ------------------------------------------------
# [ User bin ]
if [[ -d "$HOME"/.local/bin ]]
then
	_prepend_path "$HOME"/.local/bin
	_prepend_path "$HOME"/.local/bin/app
	_prepend_path "$HOME"/.local/bin/fzf
	_prepend_path "$HOME"/.local/bin/run
fi

# [ User lib ]
[[ -z "$LIB_HOME" ]] && export LIB_HOME="$HOME"/.local/lib

# ------------------------------------------------
# [ CLI ]
# ------------------------------------------------
# [ Less ]
if _is_command less
then
	export LESS='-g -i -R -F -w -z-4 -P"%F"'
	export LESSHISTFILE="$XDG_CACHE_HOME"/less
fi

# [ Neovim ]
export DIFFPROG='nvim -d'

# Give a name to nvim server to start with neovim-remote
_is_command nvr && export NVIM_LISTEN_ADDRESS=/tmp/nvimsocket nvim

# [ Pass ]
_is_command pass && export PASSWORD_STORE_DIR="$XDG_DATA_HOME"/private/pass

# [ Ripgrep ]
_is_command rg && export RIPGREP_CONFIG_PATH="$XDG_CONFIG_HOME"/ripgrep/rc

# [ Weechat ]
export WEECHAT_HOME="$XDG_CONFIG_HOME"/weechat

# [ Misc ]
# Cleanup $HOME dir
export XINITRC="$XDG_CONFIG_HOME"/X11/xinitrc
export PARALLEL_HOME="$XDG_CACHE_HOME"/parallel
export GTK2_RC_FILES="$XDG_CONFIG_HOME"/gtk-2.0/gtkrc

# ------------------------------------------------
# [ PROGRAMMING ]
# ------------------------------------------------
# [ C ]
[[ -d "$HOME"/.local/include ]] &&
    export C_INCLUDE_PATH="${C_INCLUDE_PATH:+${C_INCLUDE_PATH}:}${HOME}/.local/include"
[[ -d "$HOME"/.local/lib ]] &&
    export LD_LIBRARY_PATH="${LD_LIBRARY_PATH:+${LD_LIBRARY_PATH}:}${HOME}/.local/lib"
[[ -d "$HOME"/.local/lib/pkgconfig ]] &&
    export PKG_CONFIG_PATH="${PKG_CONFIG_PATH:+${PKG_CONFIG_PATH}:}${HOME}/.local/lib/pkgconfig"

#  [ Go ]
if _is_command go
then
	export GOPATH="$LIB_HOME"/go
	_append_path "$LIB_HOME"/go/bin
fi

# [ Lua ]
_is_command luarocks && _append_path "$LIB_HOME"/luarocks/bin

# [ Npm ]
if _is_command npm
then
	export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME"/npm/npmrc
	_append_path "$LIB_HOME"/npm/bin
fi

# [ Rust ]
if [[ -d "$XDG_DATA_HOME"/rustup && -d "$LIB_HOME"/cargo ]]
then
	export RUSTUP_HOME="$XDG_DATA_HOME"/rustup
	export CARGO_HOME="$LIB_HOME"/cargo
	_append_path "$CARGO_HOME"/bin
fi

# vim: ft=zsh
