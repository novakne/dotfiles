#!/usr/bin/env bash
#
# [ River ]

# ------------------------------------------------
# [ SERVICES ]
# ------------------------------------------------
# Use different $svdir for every instance of river
# Debugging purpose, using river inside river
declare id
id=$(id -u)
svdir=/tmp/"${id}"-sv-"$WAYLAND_DISPLAY"

pgrep -f "^runsvdir ${svdir}" &&
	exec echo "runsvdir already running for wayland session"

cp -rLpT "$SVDIR"/current "${svdir}"

# ------------------------------------------------
# [ THEME ]
# ------------------------------------------------
declare themes_dir theme

themes_dir="$XDG_CONFIG_HOME"/river/themes

if [[ "$USER_THEME" == argi ]]; then
	theme=argi
	riverctl spawn 'swaybg -i ~/media/img/wal/green_lantern_01.jpg >/dev/null 2>&1'
elif [[ "$USER_THEME" == kosmikoa ]]; then
	theme=kosmikoa
fi

source "${themes_dir}"/"${theme}"
riverctl spawn 'rivertag >/dev/null 2>&1'

unset -v themes_dir

# ------------------------------------------------
# [ Options ]
# ------------------------------------------------
riverctl set-repeat 50 300 # Set repeat rate <rate> <delay>
riverctl attach-mode bottom
riverctl focus-follows-cursor normal

# Touchpad
riverctl input 1267:12352:ELAN0501:00_04F3:3040_Touchpad tap enabled
riverctl input 1267:12352:ELAN0501:00_04F3:3040_Touchpad disable-while-typing enabled

# Set app-ids of views which should float
riverctl float-filter-add "float"
riverctl float-filter-add "popup"
riverctl float-filter-add "mpv"
riverctl float-filter-add "imv"

# ------------------------------------------------
# [ Keybind ]
# ------------------------------------------------
mod="Mod4"
term=footclient
term_float="footclient --app-id 'float'"
browser=firefox

# Mod+E to exit river
riverctl map normal ${mod}+Shift E exit

# [ App ]
riverctl map normal ${mod}        Return spawn ${term}
riverctl map normal Control+Shift Return spawn ${term}
riverctl map normal ${mod}        B      spawn ${browser}
riverctl map normal ${mod}        D      spawn fuzzel-run
riverctl map normal ${mod}        E      spawn ${term} "$EDITOR"
riverctl map normal ${mod}        N      spawn ${term_float} nnn-float
riverctl map normal ${mod}        O      spawn ${term_float} fmenu
riverctl map normal ${mod}        P      spawn ${term_float} fpass
riverctl map normal ${mod}        T      spawn foot-float
riverctl map normal ${mod}        W      spawn sysinfo

# [ Views ]
riverctl map normal ${mod}       Q         close
riverctl map normal ${mod}       J         focus-view next
riverctl map normal ${mod}       K         focus-view previous
riverctl map normal ${mod}+Shift J         swap next
riverctl map normal ${mod}+Shift K         swap previous
riverctl map normal ${mod}+Shift semicolon send-to-output next
riverctl map normal ${mod}+Shift comma     send-to-output previous
riverctl map normal ${mod}+Shift Return    zoom

riverctl map normal ${mod} semicolon focus-output next
riverctl map normal ${mod} comma     focus-output previous

# Tiling
riverctl map normal ${mod}       H mod-layout-value rivercarro fixed main_factor -0.05
riverctl map normal ${mod}       L mod-layout-value rivercarro fixed main_factor +0.05
riverctl map normal ${mod}+Shift H mod-layout-value rivercarro int main_count +1
riverctl map normal ${mod}+Shift L mod-layout-value rivercarro int main_count -1

# Floating
riverctl map normal ${mod}+Mod1         H move left 100
riverctl map normal ${mod}+Mod1         J move down 100
riverctl map normal ${mod}+Mod1         K move up 100
riverctl map normal ${mod}+Mod1         L move right 100

riverctl map normal ${mod}+Mod1+Control H snap left
riverctl map normal ${mod}+Mod1+Control J snap down
riverctl map normal ${mod}+Mod1+Control K snap up
riverctl map normal ${mod}+Mod1+Control L snap right

riverctl map normal ${mod}+Mod1+Shift   H resize horizontal -100
riverctl map normal ${mod}+Mod1+Shift   J resize vertical 100
riverctl map normal ${mod}+Mod1+Shift   K resize vertical -100
riverctl map normal ${mod}+Mod1+Shift   L resize horizontal 100

riverctl map-pointer normal ${mod} BTN_LEFT move-view
riverctl map-pointer normal ${mod} BTN_RIGHT resize-view

# [ Layouts ]
riverctl map normal ${mod} Space toggle-float
riverctl map normal ${mod} F     toggle-fullscreen
riverctl map normal ${mod} Up    set-layout-value rivercarro string main_location top
riverctl map normal ${mod} Right set-layout-value rivercarro string main_location right
riverctl map normal ${mod} Down  set-layout-value rivercarro string main_location bottom
riverctl map normal ${mod} Left  set-layout-value rivercarro string main_location left
riverctl map normal ${mod} M     set-layout-value rivercarro string main_location monocle

# [ Tags ]
# Workaround for azerty keyboard
declare -a azerty tags

azerty=(ampersand eacute quotedbl apostrophe parenleft minus egrave underscore ccedilla)

for i in {0..8}; do
	tags=$((1 << i))
	riverctl map normal ${mod}               "${azerty[i]}" set-focused-tags "${tags[@]}"
	riverctl map normal ${mod}+Shift         "${azerty[i]}" set-view-tags "${tags[@]}"
	riverctl map normal ${mod}+Control       "${azerty[i]}" toggle-focused-tags "${tags[@]}"
	riverctl map normal ${mod}+Shift+Control "${azerty[i]}" toggle-view-tags "${tags[@]}"
done

unset -v azerty tags

# Mod+0 to focus all tags
tags1to9=$(((1 << 9) - 1))
riverctl map normal ${mod} agrave set-focused-tags $tags1to9
riverctl map normal ${mod}+Shift agrave set-view-tags $tags1to9

# [ Scratchpad ]
# <https://github.com/ifreund/river/wiki/Scratchpad>
scratch_tag=$((1 << 20))
riverctl map normal ${mod}       S toggle-focused-tags ${scratch_tag}
riverctl map normal ${mod}+Shift S set-view-tags ${scratch_tag}

all_but_scratch_tag=$((((1 << 32) - 1) ^ scratch_tag))
riverctl spawn-tagmask ${all_but_scratch_tag}

# [ Passthrough ]
# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

riverctl map normal      ${mod} F11 enter-mode passthrough
riverctl map passthrough ${mod} F11 enter-mode normal

# [ Special keys ]
# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked; do
	# Volume
	riverctl map ${mode} None XF86AudioRaiseVolume spawn 'pamixer --increase 5'
	riverctl map ${mode} None XF86AudioLowerVolume spawn 'pamixer --decrease 5'
	riverctl map ${mode} None XF86AudioMute        spawn 'pamixer --toggle-mute'

	# Brighness
	riverctl map ${mode} None XF86MonBrightnessUp   spawn 'brightnessctl set +5%'
	riverctl map ${mode} None XF86MonBrightnessDown spawn 'brightnessctl set 5%-'
done

# Screenshot
riverctl map normal ${mod}       Print spawn 'snap -f'
riverctl map normal ${mod}+Shift Print spawn 'snap -s'

# Set and exec into the default layout generator, rivertile.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivercarro

# Start runit user services
exec runsvdir "${svdir}" \ 'log: ...........................................................................................................................................................................................................................................................................................................................................................................................................'
